// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: textGenerationService.proto

package textgeneration

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FinishReason int32

const (
	FinishReason_FINISH_REASON_LENGTH        FinishReason = 0
	FinishReason_FINISH_REASON_EOS_TOKEN     FinishReason = 1
	FinishReason_FINISH_REASON_STOP_SEQUENCE FinishReason = 2
)

// Enum value maps for FinishReason.
var (
	FinishReason_name = map[int32]string{
		0: "FINISH_REASON_LENGTH",
		1: "FINISH_REASON_EOS_TOKEN",
		2: "FINISH_REASON_STOP_SEQUENCE",
	}
	FinishReason_value = map[string]int32{
		"FINISH_REASON_LENGTH":        0,
		"FINISH_REASON_EOS_TOKEN":     1,
		"FINISH_REASON_STOP_SEQUENCE": 2,
	}
)

func (x FinishReason) Enum() *FinishReason {
	p := new(FinishReason)
	*p = x
	return p
}

func (x FinishReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FinishReason) Descriptor() protoreflect.EnumDescriptor {
	return file_textGenerationService_proto_enumTypes[0].Descriptor()
}

func (FinishReason) Type() protoreflect.EnumType {
	return &file_textGenerationService_proto_enumTypes[0]
}

func (x FinishReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FinishReason.Descriptor instead.
func (FinishReason) EnumDescriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{0}
}

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{0}
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{1}
}

/// Empty request
type InfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{2}
}

type InfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequiresPadding bool   `protobuf:"varint,1,opt,name=requires_padding,json=requiresPadding,proto3" json:"requires_padding,omitempty"`
	Dtype           string `protobuf:"bytes,2,opt,name=dtype,proto3" json:"dtype,omitempty"`
	DeviceType      string `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{3}
}

func (x *InfoResponse) GetRequiresPadding() bool {
	if x != nil {
		return x.RequiresPadding
	}
	return false
}

func (x *InfoResponse) GetDtype() string {
	if x != nil {
		return x.Dtype
	}
	return ""
}

func (x *InfoResponse) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

/// Empty request
type ServiceDiscoveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceDiscoveryRequest) Reset() {
	*x = ServiceDiscoveryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceDiscoveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceDiscoveryRequest) ProtoMessage() {}

func (x *ServiceDiscoveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceDiscoveryRequest.ProtoReflect.Descriptor instead.
func (*ServiceDiscoveryRequest) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{4}
}

type ServiceDiscoveryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Other shards urls
	Urls []string `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *ServiceDiscoveryResponse) Reset() {
	*x = ServiceDiscoveryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceDiscoveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceDiscoveryResponse) ProtoMessage() {}

func (x *ServiceDiscoveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceDiscoveryResponse.ProtoReflect.Descriptor instead.
func (*ServiceDiscoveryResponse) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{5}
}

func (x *ServiceDiscoveryResponse) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type ClearCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Optional batch id
	Id *uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *ClearCacheRequest) Reset() {
	*x = ClearCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCacheRequest) ProtoMessage() {}

func (x *ClearCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCacheRequest.ProtoReflect.Descriptor instead.
func (*ClearCacheRequest) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{6}
}

func (x *ClearCacheRequest) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

/// Empty response
type ClearCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearCacheResponse) Reset() {
	*x = ClearCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCacheResponse) ProtoMessage() {}

func (x *ClearCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCacheResponse.ProtoReflect.Descriptor instead.
func (*ClearCacheResponse) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{7}
}

type NextTokenChooserParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// exponential scaling output probability distribution
	Temperature float32 `protobuf:"fixed32,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	/// restricting to the k highest probability elements
	TopK uint32 `protobuf:"varint,2,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
	/// restricting to top tokens summing to prob_cut_off <= prob_cut_off
	TopP float32 `protobuf:"fixed32,3,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`
	/// restricting to top tokens summing to prob_cut_off <= prob_cut_off
	TypicalP float32 `protobuf:"fixed32,4,opt,name=typical_p,json=typicalP,proto3" json:"typical_p,omitempty"`
	/// apply sampling on the logits
	DoSample bool `protobuf:"varint,5,opt,name=do_sample,json=doSample,proto3" json:"do_sample,omitempty"`
	/// random seed for sampling
	Seed uint64 `protobuf:"varint,6,opt,name=seed,proto3" json:"seed,omitempty"`
	/// repetition penalty
	RepetitionPenalty float32 `protobuf:"fixed32,7,opt,name=repetition_penalty,json=repetitionPenalty,proto3" json:"repetition_penalty,omitempty"`
	/// token watermarking using "A Watermark for Large Language Models"
	Watermark bool `protobuf:"varint,8,opt,name=watermark,proto3" json:"watermark,omitempty"`
}

func (x *NextTokenChooserParameters) Reset() {
	*x = NextTokenChooserParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextTokenChooserParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextTokenChooserParameters) ProtoMessage() {}

func (x *NextTokenChooserParameters) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextTokenChooserParameters.ProtoReflect.Descriptor instead.
func (*NextTokenChooserParameters) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{8}
}

func (x *NextTokenChooserParameters) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *NextTokenChooserParameters) GetTopK() uint32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *NextTokenChooserParameters) GetTopP() float32 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *NextTokenChooserParameters) GetTypicalP() float32 {
	if x != nil {
		return x.TypicalP
	}
	return 0
}

func (x *NextTokenChooserParameters) GetDoSample() bool {
	if x != nil {
		return x.DoSample
	}
	return false
}

func (x *NextTokenChooserParameters) GetSeed() uint64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *NextTokenChooserParameters) GetRepetitionPenalty() float32 {
	if x != nil {
		return x.RepetitionPenalty
	}
	return 0
}

func (x *NextTokenChooserParameters) GetWatermark() bool {
	if x != nil {
		return x.Watermark
	}
	return false
}

type StoppingCriteriaParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Maximum number of generated tokens
	MaxNewTokens uint32 `protobuf:"varint,1,opt,name=max_new_tokens,json=maxNewTokens,proto3" json:"max_new_tokens,omitempty"`
	/// Optional stopping sequences
	StopSequences []string `protobuf:"bytes,2,rep,name=stop_sequences,json=stopSequences,proto3" json:"stop_sequences,omitempty"`
	/// Ignore end of sequence token
	/// used for benchmarking
	IgnoreEosToken bool `protobuf:"varint,3,opt,name=ignore_eos_token,json=ignoreEosToken,proto3" json:"ignore_eos_token,omitempty"`
}

func (x *StoppingCriteriaParameters) Reset() {
	*x = StoppingCriteriaParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoppingCriteriaParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoppingCriteriaParameters) ProtoMessage() {}

func (x *StoppingCriteriaParameters) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoppingCriteriaParameters.ProtoReflect.Descriptor instead.
func (*StoppingCriteriaParameters) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{9}
}

func (x *StoppingCriteriaParameters) GetMaxNewTokens() uint32 {
	if x != nil {
		return x.MaxNewTokens
	}
	return 0
}

func (x *StoppingCriteriaParameters) GetStopSequences() []string {
	if x != nil {
		return x.StopSequences
	}
	return nil
}

func (x *StoppingCriteriaParameters) GetIgnoreEosToken() bool {
	if x != nil {
		return x.IgnoreEosToken
	}
	return false
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Request ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	/// The generation context
	Inputs string `protobuf:"bytes,2,opt,name=inputs,proto3" json:"inputs,omitempty"`
	/// Context truncation
	Truncate uint32 `protobuf:"varint,3,opt,name=truncate,proto3" json:"truncate,omitempty"`
	/// Next Token Chooser Parameters
	Parameters *NextTokenChooserParameters `protobuf:"bytes,4,opt,name=parameters,proto3" json:"parameters,omitempty"`
	/// Stopping Criteria Parameters
	StoppingParameters *StoppingCriteriaParameters `protobuf:"bytes,5,opt,name=stopping_parameters,json=stoppingParameters,proto3" json:"stopping_parameters,omitempty"`
	/// Return prefill logprobs
	PrefillLogprobs bool `protobuf:"varint,6,opt,name=prefill_logprobs,json=prefillLogprobs,proto3" json:"prefill_logprobs,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{10}
}

func (x *Request) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Request) GetInputs() string {
	if x != nil {
		return x.Inputs
	}
	return ""
}

func (x *Request) GetTruncate() uint32 {
	if x != nil {
		return x.Truncate
	}
	return 0
}

func (x *Request) GetParameters() *NextTokenChooserParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Request) GetStoppingParameters() *StoppingCriteriaParameters {
	if x != nil {
		return x.StoppingParameters
	}
	return nil
}

func (x *Request) GetPrefillLogprobs() bool {
	if x != nil {
		return x.PrefillLogprobs
	}
	return false
}

type Batch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Batch ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	/// Individual requests
	Requests []*Request `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty"`
	/// Batch size (==len(requests))
	Size uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	/// Maximum number of tokens this batch will grow to
	MaxTokens uint32 `protobuf:"varint,4,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
}

func (x *Batch) Reset() {
	*x = Batch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{11}
}

func (x *Batch) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Batch) GetRequests() []*Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *Batch) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Batch) GetMaxTokens() uint32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

type CachedBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Batch ID
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	/// Individual requests ids
	RequestIds []uint64 `protobuf:"varint,2,rep,packed,name=request_ids,json=requestIds,proto3" json:"request_ids,omitempty"`
	/// Batch size (==len(requests))
	Size uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	/// Maximum number of tokens this batch will grow to
	MaxTokens uint32 `protobuf:"varint,4,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
}

func (x *CachedBatch) Reset() {
	*x = CachedBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CachedBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachedBatch) ProtoMessage() {}

func (x *CachedBatch) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CachedBatch.ProtoReflect.Descriptor instead.
func (*CachedBatch) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{12}
}

func (x *CachedBatch) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CachedBatch) GetRequestIds() []uint64 {
	if x != nil {
		return x.RequestIds
	}
	return nil
}

func (x *CachedBatch) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CachedBatch) GetMaxTokens() uint32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

type GeneratedText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Output
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	/// Number of generated tokens
	GeneratedTokens uint32 `protobuf:"varint,2,opt,name=generated_tokens,json=generatedTokens,proto3" json:"generated_tokens,omitempty"`
	/// Finish reason
	FinishReason FinishReason `protobuf:"varint,3,opt,name=finish_reason,json=finishReason,proto3,enum=FinishReason" json:"finish_reason,omitempty"`
	/// Seed
	Seed *uint64 `protobuf:"varint,4,opt,name=seed,proto3,oneof" json:"seed,omitempty"`
}

func (x *GeneratedText) Reset() {
	*x = GeneratedText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratedText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratedText) ProtoMessage() {}

func (x *GeneratedText) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratedText.ProtoReflect.Descriptor instead.
func (*GeneratedText) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{13}
}

func (x *GeneratedText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GeneratedText) GetGeneratedTokens() uint32 {
	if x != nil {
		return x.GeneratedTokens
	}
	return 0
}

func (x *GeneratedText) GetFinishReason() FinishReason {
	if x != nil {
		return x.FinishReason
	}
	return FinishReason_FINISH_REASON_LENGTH
}

func (x *GeneratedText) GetSeed() uint64 {
	if x != nil && x.Seed != nil {
		return *x.Seed
	}
	return 0
}

type PrefillTokens struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Prefill Token IDs
	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	/// Prefill Logprobs
	Logprobs []float32 `protobuf:"fixed32,2,rep,packed,name=logprobs,proto3" json:"logprobs,omitempty"`
	/// Prefill tokens
	Texts []string `protobuf:"bytes,3,rep,name=texts,proto3" json:"texts,omitempty"`
}

func (x *PrefillTokens) Reset() {
	*x = PrefillTokens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrefillTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefillTokens) ProtoMessage() {}

func (x *PrefillTokens) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefillTokens.ProtoReflect.Descriptor instead.
func (*PrefillTokens) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{14}
}

func (x *PrefillTokens) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *PrefillTokens) GetLogprobs() []float32 {
	if x != nil {
		return x.Logprobs
	}
	return nil
}

func (x *PrefillTokens) GetTexts() []string {
	if x != nil {
		return x.Texts
	}
	return nil
}

type Generation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Request ID
	RequestId uint64 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	/// Prefill tokens (optional)
	PrefillTokens *PrefillTokens `protobuf:"bytes,2,opt,name=prefill_tokens,json=prefillTokens,proto3" json:"prefill_tokens,omitempty"`
	/// Token ID
	TokenId uint32 `protobuf:"varint,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	/// Logprob
	TokenLogprob float32 `protobuf:"fixed32,4,opt,name=token_logprob,json=tokenLogprob,proto3" json:"token_logprob,omitempty"`
	/// Text
	TokenText string `protobuf:"bytes,5,opt,name=token_text,json=tokenText,proto3" json:"token_text,omitempty"`
	/// Is it a special token
	TokenIsSpecial bool `protobuf:"varint,6,opt,name=token_is_special,json=tokenIsSpecial,proto3" json:"token_is_special,omitempty"`
	/// Complete generated text
	GeneratedText *GeneratedText `protobuf:"bytes,7,opt,name=generated_text,json=generatedText,proto3,oneof" json:"generated_text,omitempty"`
}

func (x *Generation) Reset() {
	*x = Generation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Generation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Generation) ProtoMessage() {}

func (x *Generation) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Generation.ProtoReflect.Descriptor instead.
func (*Generation) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{15}
}

func (x *Generation) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *Generation) GetPrefillTokens() *PrefillTokens {
	if x != nil {
		return x.PrefillTokens
	}
	return nil
}

func (x *Generation) GetTokenId() uint32 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *Generation) GetTokenLogprob() float32 {
	if x != nil {
		return x.TokenLogprob
	}
	return 0
}

func (x *Generation) GetTokenText() string {
	if x != nil {
		return x.TokenText
	}
	return ""
}

func (x *Generation) GetTokenIsSpecial() bool {
	if x != nil {
		return x.TokenIsSpecial
	}
	return false
}

func (x *Generation) GetGeneratedText() *GeneratedText {
	if x != nil {
		return x.GeneratedText
	}
	return nil
}

type FilterBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Batch ID
	BatchId uint64 `protobuf:"varint,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	/// Requests to keep
	RequestIds []uint64 `protobuf:"varint,2,rep,packed,name=request_ids,json=requestIds,proto3" json:"request_ids,omitempty"`
}

func (x *FilterBatchRequest) Reset() {
	*x = FilterBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterBatchRequest) ProtoMessage() {}

func (x *FilterBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterBatchRequest.ProtoReflect.Descriptor instead.
func (*FilterBatchRequest) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{16}
}

func (x *FilterBatchRequest) GetBatchId() uint64 {
	if x != nil {
		return x.BatchId
	}
	return 0
}

func (x *FilterBatchRequest) GetRequestIds() []uint64 {
	if x != nil {
		return x.RequestIds
	}
	return nil
}

type FilterBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Filtered Batch (cached)
	Batch *CachedBatch `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
}

func (x *FilterBatchResponse) Reset() {
	*x = FilterBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterBatchResponse) ProtoMessage() {}

func (x *FilterBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterBatchResponse.ProtoReflect.Descriptor instead.
func (*FilterBatchResponse) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{17}
}

func (x *FilterBatchResponse) GetBatch() *CachedBatch {
	if x != nil {
		return x.Batch
	}
	return nil
}

type PrefillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Batch
	Batch *Batch `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
}

func (x *PrefillRequest) Reset() {
	*x = PrefillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrefillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefillRequest) ProtoMessage() {}

func (x *PrefillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefillRequest.ProtoReflect.Descriptor instead.
func (*PrefillRequest) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{18}
}

func (x *PrefillRequest) GetBatch() *Batch {
	if x != nil {
		return x.Batch
	}
	return nil
}

type PrefillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Generation
	Generations []*Generation `protobuf:"bytes,1,rep,name=generations,proto3" json:"generations,omitempty"`
	/// Next batch (cached)
	Batch *CachedBatch `protobuf:"bytes,2,opt,name=batch,proto3,oneof" json:"batch,omitempty"`
}

func (x *PrefillResponse) Reset() {
	*x = PrefillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrefillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefillResponse) ProtoMessage() {}

func (x *PrefillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefillResponse.ProtoReflect.Descriptor instead.
func (*PrefillResponse) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{19}
}

func (x *PrefillResponse) GetGenerations() []*Generation {
	if x != nil {
		return x.Generations
	}
	return nil
}

func (x *PrefillResponse) GetBatch() *CachedBatch {
	if x != nil {
		return x.Batch
	}
	return nil
}

type DecodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Cached batches
	Batches []*CachedBatch `protobuf:"bytes,1,rep,name=batches,proto3" json:"batches,omitempty"`
}

func (x *DecodeRequest) Reset() {
	*x = DecodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeRequest) ProtoMessage() {}

func (x *DecodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeRequest.ProtoReflect.Descriptor instead.
func (*DecodeRequest) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{20}
}

func (x *DecodeRequest) GetBatches() []*CachedBatch {
	if x != nil {
		return x.Batches
	}
	return nil
}

type DecodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Decodes
	Generations []*Generation `protobuf:"bytes,1,rep,name=generations,proto3" json:"generations,omitempty"`
	/// Next batch (cached)
	Batch *CachedBatch `protobuf:"bytes,2,opt,name=batch,proto3,oneof" json:"batch,omitempty"`
}

func (x *DecodeResponse) Reset() {
	*x = DecodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeResponse) ProtoMessage() {}

func (x *DecodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeResponse.ProtoReflect.Descriptor instead.
func (*DecodeResponse) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{21}
}

func (x *DecodeResponse) GetGenerations() []*Generation {
	if x != nil {
		return x.Generations
	}
	return nil
}

func (x *DecodeResponse) GetBatch() *CachedBatch {
	if x != nil {
		return x.Batch
	}
	return nil
}

type WarmupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Batch to warmup on
	Batch *Batch `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
}

func (x *WarmupRequest) Reset() {
	*x = WarmupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarmupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarmupRequest) ProtoMessage() {}

func (x *WarmupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarmupRequest.ProtoReflect.Descriptor instead.
func (*WarmupRequest) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{22}
}

func (x *WarmupRequest) GetBatch() *Batch {
	if x != nil {
		return x.Batch
	}
	return nil
}

/// Empty response
type WarmupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Maximum number of tokens supported by the model
	MaxSupportedTotalTokens *uint32 `protobuf:"varint,1,opt,name=max_supported_total_tokens,json=maxSupportedTotalTokens,proto3,oneof" json:"max_supported_total_tokens,omitempty"`
}

func (x *WarmupResponse) Reset() {
	*x = WarmupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_textGenerationService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarmupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarmupResponse) ProtoMessage() {}

func (x *WarmupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_textGenerationService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarmupResponse.ProtoReflect.Descriptor instead.
func (*WarmupResponse) Descriptor() ([]byte, []int) {
	return file_textGenerationService_proto_rawDescGZIP(), []int{23}
}

func (x *WarmupResponse) GetMaxSupportedTotalTokens() uint32 {
	if x != nil && x.MaxSupportedTotalTokens != nil {
		return *x.MaxSupportedTotalTokens
	}
	return 0
}

var File_textGenerationService_proto protoreflect.FileDescriptor

var file_textGenerationService_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x74, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a,
	0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10,
	0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x70, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x73, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x18,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x11,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x1a, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70,
	0x5f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x50, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x79, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x74, 0x79, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x6f, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x64, 0x6f, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12,
	0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x77,
	0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x53, 0x74,
	0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f,
	0x6e, 0x65, 0x77, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f,
	0x65, 0x6f, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x6f, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x83, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x12,
	0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43,
	0x68, 0x6f, 0x6f, 0x73, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x13,
	0x73, 0x74, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x4c, 0x6f, 0x67,
	0x70, 0x72, 0x6f, 0x62, 0x73, 0x22, 0x70, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61,
	0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x71, 0x0a, 0x0b, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x29, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x0d, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x04, 0x73, 0x65, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x65, 0x65,
	0x64, 0x22, 0x53, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x65, 0x78, 0x74, 0x73, 0x22, 0xba, 0x02, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x0d, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x73, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x0d,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x50, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x22, 0x2e, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x22, 0x73, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48,
	0x00, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x22, 0x37, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x72,
	0x0a, 0x0e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x27, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x05,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x22, 0x2d, 0x0a, 0x0d, 0x57, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x22, 0x71, 0x0a, 0x0e, 0x57, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x1a, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x17, 0x6d, 0x61, 0x78, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x2a, 0x66, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x45, 0x4f, 0x53, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x46,
	0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x4f,
	0x50, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x32, 0xa9, 0x03, 0x0a,
	0x15, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x18, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x12, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x13,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x57, 0x61, 0x72,
	0x6d, 0x75, 0x70, 0x12, 0x0e, 0x2e, 0x57, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x57, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x12,
	0x0f, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x2e, 0x44,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x44,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x0e, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x53, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x61, 0x78, 0x2d, 0x47, 0x61, 0x62, 0x72, 0x69,
	0x65, 0x6c, 0x2d, 0x53, 0x75, 0x73, 0x6d, 0x61, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x70, 0x68, 0x69,
	0x2d, 0x66, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x2d, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2d, 0x6d, 0x6f,
	0x63, 0x6b, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x74,
	0x65, 0x78, 0x74, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_textGenerationService_proto_rawDescOnce sync.Once
	file_textGenerationService_proto_rawDescData = file_textGenerationService_proto_rawDesc
)

func file_textGenerationService_proto_rawDescGZIP() []byte {
	file_textGenerationService_proto_rawDescOnce.Do(func() {
		file_textGenerationService_proto_rawDescData = protoimpl.X.CompressGZIP(file_textGenerationService_proto_rawDescData)
	})
	return file_textGenerationService_proto_rawDescData
}

var file_textGenerationService_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_textGenerationService_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_textGenerationService_proto_goTypes = []interface{}{
	(FinishReason)(0),                  // 0: FinishReason
	(*HealthRequest)(nil),              // 1: HealthRequest
	(*HealthResponse)(nil),             // 2: HealthResponse
	(*InfoRequest)(nil),                // 3: InfoRequest
	(*InfoResponse)(nil),               // 4: InfoResponse
	(*ServiceDiscoveryRequest)(nil),    // 5: ServiceDiscoveryRequest
	(*ServiceDiscoveryResponse)(nil),   // 6: ServiceDiscoveryResponse
	(*ClearCacheRequest)(nil),          // 7: ClearCacheRequest
	(*ClearCacheResponse)(nil),         // 8: ClearCacheResponse
	(*NextTokenChooserParameters)(nil), // 9: NextTokenChooserParameters
	(*StoppingCriteriaParameters)(nil), // 10: StoppingCriteriaParameters
	(*Request)(nil),                    // 11: Request
	(*Batch)(nil),                      // 12: Batch
	(*CachedBatch)(nil),                // 13: CachedBatch
	(*GeneratedText)(nil),              // 14: GeneratedText
	(*PrefillTokens)(nil),              // 15: PrefillTokens
	(*Generation)(nil),                 // 16: Generation
	(*FilterBatchRequest)(nil),         // 17: FilterBatchRequest
	(*FilterBatchResponse)(nil),        // 18: FilterBatchResponse
	(*PrefillRequest)(nil),             // 19: PrefillRequest
	(*PrefillResponse)(nil),            // 20: PrefillResponse
	(*DecodeRequest)(nil),              // 21: DecodeRequest
	(*DecodeResponse)(nil),             // 22: DecodeResponse
	(*WarmupRequest)(nil),              // 23: WarmupRequest
	(*WarmupResponse)(nil),             // 24: WarmupResponse
}
var file_textGenerationService_proto_depIdxs = []int32{
	9,  // 0: Request.parameters:type_name -> NextTokenChooserParameters
	10, // 1: Request.stopping_parameters:type_name -> StoppingCriteriaParameters
	11, // 2: Batch.requests:type_name -> Request
	0,  // 3: GeneratedText.finish_reason:type_name -> FinishReason
	15, // 4: Generation.prefill_tokens:type_name -> PrefillTokens
	14, // 5: Generation.generated_text:type_name -> GeneratedText
	13, // 6: FilterBatchResponse.batch:type_name -> CachedBatch
	12, // 7: PrefillRequest.batch:type_name -> Batch
	16, // 8: PrefillResponse.generations:type_name -> Generation
	13, // 9: PrefillResponse.batch:type_name -> CachedBatch
	13, // 10: DecodeRequest.batches:type_name -> CachedBatch
	16, // 11: DecodeResponse.generations:type_name -> Generation
	13, // 12: DecodeResponse.batch:type_name -> CachedBatch
	12, // 13: WarmupRequest.batch:type_name -> Batch
	3,  // 14: TextGenerationService.Info:input_type -> InfoRequest
	5,  // 15: TextGenerationService.ServiceDiscovery:input_type -> ServiceDiscoveryRequest
	7,  // 16: TextGenerationService.ClearCache:input_type -> ClearCacheRequest
	17, // 17: TextGenerationService.FilterBatch:input_type -> FilterBatchRequest
	23, // 18: TextGenerationService.Warmup:input_type -> WarmupRequest
	19, // 19: TextGenerationService.Prefill:input_type -> PrefillRequest
	21, // 20: TextGenerationService.Decode:input_type -> DecodeRequest
	1,  // 21: TextGenerationService.Health:input_type -> HealthRequest
	4,  // 22: TextGenerationService.Info:output_type -> InfoResponse
	6,  // 23: TextGenerationService.ServiceDiscovery:output_type -> ServiceDiscoveryResponse
	8,  // 24: TextGenerationService.ClearCache:output_type -> ClearCacheResponse
	18, // 25: TextGenerationService.FilterBatch:output_type -> FilterBatchResponse
	24, // 26: TextGenerationService.Warmup:output_type -> WarmupResponse
	20, // 27: TextGenerationService.Prefill:output_type -> PrefillResponse
	22, // 28: TextGenerationService.Decode:output_type -> DecodeResponse
	2,  // 29: TextGenerationService.Health:output_type -> HealthResponse
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_textGenerationService_proto_init() }
func file_textGenerationService_proto_init() {
	if File_textGenerationService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_textGenerationService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceDiscoveryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceDiscoveryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextTokenChooserParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoppingCriteriaParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Batch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CachedBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratedText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrefillTokens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Generation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrefillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrefillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarmupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_textGenerationService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarmupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_textGenerationService_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_textGenerationService_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_textGenerationService_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_textGenerationService_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_textGenerationService_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_textGenerationService_proto_msgTypes[23].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_textGenerationService_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_textGenerationService_proto_goTypes,
		DependencyIndexes: file_textGenerationService_proto_depIdxs,
		EnumInfos:         file_textGenerationService_proto_enumTypes,
		MessageInfos:      file_textGenerationService_proto_msgTypes,
	}.Build()
	File_textGenerationService_proto = out.File
	file_textGenerationService_proto_rawDesc = nil
	file_textGenerationService_proto_goTypes = nil
	file_textGenerationService_proto_depIdxs = nil
}
